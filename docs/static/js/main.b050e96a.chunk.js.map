{"version":3,"sources":["modules/lightsout.ts","App.js","serviceWorker.js","index.js"],"names":["isProblemDifficult","n","isIdt_mtrx","mtrx","some","row","idx1","j","idx2","arrayDeepCp","array","JSON","parse","stringify","toShowAnsMap","state","toAnsMtrx","arr","Array","Math","floor","length","keys","map","i","slice","eachSlice","idx","filter","extend","OrbitControls","N","window","location","href","split","parseInt","boxSize","innerWidth","innerHeight","statusLights","random","console","log","toIdt","fMapLights","mapLightsInv","fIdt_mtrx","kansei","fill","pend","count","forEach","isOne","includes","left","right","k","chIdx","indexOf","chLeft","chRight","l","v","m","xs","join","warn","F2_Gauss_Jordan","defaultAnsMap","ansMap","flat","Box","props","mesh","useRef","useFrame","showAnsFlag","x","y","current","rotation","ref","attach","args","color","MatrixBox","useState","setState","basezDistance","preIdx","_","idxes","lists","xyz","active","push","onClick","index","add","clickBox","answer","key","position","defaultProps","CameraController","useThree","camera","gl","useEffect","controls","domElement","set","minDistance","maxDistance","dispose","App","className","e","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b050e96a.chunk.js","sourcesContent":["/*************************************************************************************\n//     _     _       _     _    ___        _       ____        _                \n//    | |   (_) __ _| |__ | |_ / _ \\ _   _| |_ ___/ ___|  ___ | |_   _____ _ __ \n//    | |   | |/ _` | '_ \\| __| | | | | | | __/ __\\___ \\ / _ \\| \\ \\ / / _ \\ '__|\n//    | |___| | (_| | | | | |_| |_| | |_| | |_\\__ \\___) | (_) | |\\ V /  __/ |   \n//    |_____|_|\\__, |_| |_|\\__|\\___/ \\__,_|\\__|___/____/ \\___/|_| \\_/ \\___|_|   \n//             |___/                                                            \n//\n//    Refarence:\n//\n//   - https://ja.wikipedia.org/wiki/%E9%9A%A3%E6%8E%A5%E8%A1%8C%E5%88%97\n//   - https://www.gensu.co.jp/saito/puzzle/a38lightsout1.html\n//   - http://www.math.okayama-u.ac.jp/~mi/lecture/pdf/galois.pdf\n//\n//\n//   Depend on a Theory of Algebra\n//\n//   - F_2 Field: {1,0} only\n//\n//    (+)| 0 | 1      (*)| 0 | 1 \n//   -------------   -------------\n//     0 | 0 | 1       0 | 0 | 0  \n//   -------------   -------------\n//     1 | 1 | 0       1 | 0 | 1  \n//\n//\n//    Provided by Zodiac-G12\n//\n*************************************************************************************/\n\n// Nが15より大きいと配列サイズ・計算量的に困難になる（ブラウザという方法論に於いてのみに限る主張）\nexport const isProblemDifficult = (n : number) : boolean => {\n    return n > 15;\n}\n\n\n// ライトの初期値をランダムに決めて出力する\nexport const fStatusLights = (n : number) : number[][] => {\n    return [...Array(n).keys()].map(i => {\n        return [...Array(n).keys()].map(j => {\n            return Math.floor(Math.random()*2);\n        });\n    });\n}\n\n\n// 拡大隣接行列：つまりは各マスから各マスに、写像が対応するかに関する真偽値(binary)の、有効グラフの行列\n// を出力する\nexport const fMapLights = (n : number) : number[][] => {\n    return [...Array(n*n).keys()].map(i => {\n        return [...Array(n*n).keys()].map(j => {\n            if (\n                i === j || //あるマスにおける自分に対する写像\n                (0 <= i-1 && i-1 === j && j%n!==n-1) || //左側のマスに対する写像\n                (i+1 < n*n && i+1 === j && j%n!==0) || //右側のマスに対する写像\n                (0 <= i-n && i-n === j) || //下側のマスに対する写像\n                (i+n < n*n && i+n === j) //上側に対する写像\n            ) return 1;\n            return 0;\n        });\n    });\n}\n\n\n// (N*N) * (N*N) の単位行列を出力する\nexport const fIdt_mtrx = (n : number) : number[][] => {\n    return [...Array(n*n).keys()].map(i => {\n        return [...Array(n*n).keys()].map(j => {\n            if (i===j) return 1;\n            return 0;\n        });\n    });\n}\n\n\n// 行列が単位行列か判定して真偽値を出力する\nexport const isIdt_mtrx = (mtrx : number[][]) : boolean => {\n    return !mtrx.some((row,idx1) => {\n        return row.some((j,idx2) => {\n            return (idx1===idx2 && j!==1) || (idx1!==idx2 && j!==0);\n        });\n    });\n}\n\n\n// 配列Deepコピー\nexport const arrayDeepCp = (array: number[]) : number[] => {\n    return JSON.parse(JSON.stringify(array));\n}\n\n\n// TODO refact\n// F2体上ににおいて、ある行列の逆行列を出力する\nexport const F2_Gauss_Jordan = (n : number, toIdt : number[][], mapLightsInv : number[][]) : boolean|number[][] => {\n    // 完成した行（単位行列の一部）\n    const kansei : boolean[] = Array(n*n).fill(false);\n    // 完成した行で、各行に対して処理していないもの\n    const pend : boolean[] = Array(n*n).fill(false);\n\n    let count = 0;\n    // 逆行列が作成できるまで、N回までループ\n    while (!isIdt_mtrx(toIdt) && count++ < n) {\n\n        toIdt.forEach((row, i) => {\n            // 各行に対して\n            row.forEach((isOne, idx) => {\n                if (i === idx || isOne !== 1) return;\n                // (i,i) 以外で\"1\"になっている箇所について処理 (i,idx)\n                for (let j = 0; j < n*n; j++) {\n                    // (j,0) ~ (j,idx-1) が全て\"0\"で (j,idx) が\"1\"\n                    if (i===j || toIdt[j].slice(0,idx).includes(1) || toIdt[j][idx]!==1) continue;\n\n                    let left = toIdt[j],\n                        right = mapLightsInv[j];\n\n                    for (let k = 0; k < n*n; k++) {\n                        row[k] = (row[k] + left[k])&1;\n                        mapLightsInv[i][k] = (mapLightsInv[i][k] + right[k])&1;\n                    }\n\n                    // 単位行列を構成する要素の行が作られた時の処理\n                    if (!kansei[i] && row.filter(k=>k===1).length===1) { // cant use \"continue\"\n                        kansei[i] = true;\n                        let chIdx = row.indexOf(1),\n                            chLeft = row,\n                            chRight = mapLightsInv[i];\n\n                        // 行の入れ替え処理\n                        toIdt[i] = arrayDeepCp(toIdt[chIdx]);\n                        mapLightsInv[i] = arrayDeepCp(mapLightsInv[chIdx]);\n\n                        toIdt[chIdx] = arrayDeepCp(chLeft);\n                        mapLightsInv[chIdx] = arrayDeepCp(chRight);\n\n                        for (let k = 0; k < n*n; k++) {\n                            if (k!==chIdx && toIdt[k][chIdx]===1) {\n                                for (let l = 0; l < n*n; l++) {\n                                    toIdt[k][l] = (toIdt[k][l] + toIdt[chIdx][l])&1;\n                                    mapLightsInv[k][l] = (mapLightsInv[k][l] + mapLightsInv[chIdx][l])&1;\n                                }\n                            }\n                            if (!kansei[k] && toIdt[k].filter(l=>l===1).length===1) {\n                                pend[k] = true;\n                            }\n                        }\n                        pend.forEach((v,m) => {\n                            if (!v || kansei[m] || toIdt[m].filter(k=>k===1).length!==1) return;\n                            pend[m] = false;\n                            kansei[m] = true;\n                            let chIdx = toIdt[m].indexOf(1);\n                            let chLeft = toIdt[m],\n                                chRight = mapLightsInv[m];\n\n                            toIdt[m] = arrayDeepCp(toIdt[chIdx]);\n                            mapLightsInv[m] = arrayDeepCp(mapLightsInv[chIdx]);\n\n                            toIdt[chIdx] = arrayDeepCp(chLeft);\n                            mapLightsInv[chIdx] = arrayDeepCp(chRight);\n\n                            for (let k = 0; k < n*n; k++) {\n                                if (k===chIdx || toIdt[k][chIdx]!==1) continue;\n                                for (let l = 0; l < n*n; l++) {\n                                    toIdt[k][l] = (toIdt[k][l] + toIdt[chIdx][l])&1;\n                                    mapLightsInv[k][l] = (mapLightsInv[k][l] + mapLightsInv[chIdx][l])&1;\n                                }\n                            }\n                        })\n                    }\n                    break;\n                }\n            })\n        })\n    }\n\n        // 逆行列が作れなかった\n    if (!isIdt_mtrx(toIdt)) {\n        console.warn(\"Inverse Matrix isnt EXIST!\");\n        return false;\n    }\n\n    console.log(count);\n    console.log(\"toIdt\", \"\\n\", toIdt.map(xs => {return xs.join(\", \")}).join(\"\\n\"), \"\\n\");\n    console.log(\"mapLightsInv\", \"\\n\", mapLightsInv.map(xs => {return xs.join(\", \")}).join(\"\\n\"), \"\\n\");\n    return mapLightsInv;\n}\n\n\nexport const eachSlice = (arr : number[], n : number = 2) : number[][] => {\n    return [...Array(Math.floor(arr.length / n)).keys()].map(i => {\n        return arr.slice(i*n, i*n + n);\n    });\n}\n\n\n// 答のマップを返す \nexport const toShowAnsMap = (state : number[], toAnsMtrx : number[][], n : number) : number[][] => {\n    return eachSlice(toAnsMtrx.map(row => {\n        return row.map((i,idx) => {\n            return (i*state[idx]);\n        }).filter(i=>i===1).length&1;\n    }), n);\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Canvas, extend, useThree, useFrame } from 'react-three-fiber';\n\n// ⚠️  CAUTIONS!!!!\n// in :973 comment outed\n// vim ../node_modules/three/examples/jsm/controls/OrbitControls.js\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport { isProblemDifficult, fStatusLights, fMapLights, fIdt_mtrx, F2_Gauss_Jordan, toShowAnsMap } from './modules/lightsout';\n\n\nextend({ OrbitControls });\n\n\n////////////////////////////////////////////////////////////////////////////\n//                            パズルの定義\n////////////////////////////////////////////////////////////////////////////\n\nconst N = !window.location.href.split(\"#\")[1] || parseInt(window.location.href.split(\"#\")[1]) < 2 ? 3 : parseInt(window.location.href.split(\"#\")[1]);\n\nconst baseWid = window.innerWidth > window.innerHeight ? window.innerHeight : window.innerWidth*1.25;\nconst boxSize = baseWid / (N*2);\n\n// Light Outs ライトの初期値\nconst statusLights = fStatusLights(N);\n\n// この問題に関して、解が一意的に存在するか判定しやすいかの是非\nconsole.log(\n    isProblemDifficult(N) ? \"Difficult\" : \"Easy\"\n);\n\n// 拡大隣接行列->単位行列にする予定\nconst toIdt = fMapLights(N);\n\n// 単位行列->拡大隣接行列の逆行列にする予定\nconst mapLightsInv = fIdt_mtrx(N);\n\n// 拡大隣接行列の逆行列　存在しない時はnull\nconst toAnsMtrx = F2_Gauss_Jordan(N, toIdt, mapLightsInv);\n\n// 答の場所を示すライトの位置の初期値\nconst defaultAnsMap = [];\nfor (let i = 0; i < N; i++) {\n    defaultAnsMap[i] = [];\n    for (let j = 0; j < N; j++) defaultAnsMap[i][j] = 0;\n}\n\n// 答の場所を示すライトの位置\nlet ansMap = (!isProblemDifficult(N) && toAnsMtrx) ? toShowAnsMap(statusLights.flat(), toAnsMtrx, N) : JSON.parse(JSON.stringify(defaultAnsMap));\n\n////////////////////////////////////////////////////////////////////////////\n\n\n// TODO コンポーネント分け\nfunction colorDef(active) {\n    if (active) return \"darkorange\";\n    return \"darkslateblue\";\n}\n\nfunction clickBox(index) {\n    const y = index[0],\n          x = index[1];\n    statusLights[x][y] = ~statusLights[x][y] & 1;\n\n    [[1,0],[0,1],[-1,0],[0,-1]].forEach((add) => {\n        if(0<=add[0]+x && add[0]+x<N && 0<=add[1]+y && add[1]+y<N) {\n            statusLights[add[0]+x][add[1]+y] = ~statusLights[add[0]+x][add[1]+y] & 1;\n        }\n    });\n\n    if (!isProblemDifficult(N) && toAnsMtrx) {\n        ansMap = JSON.parse(JSON.stringify(toShowAnsMap(statusLights.flat(), toAnsMtrx, N)));\n    }\n\n    console.log(statusLights.map(xs => {return xs.join(\", \")}).join(\"\\n\"));\n}\n\nfunction Box(props) {\n    const mesh = useRef();\n\n    useFrame(() => {(props.showAnsFlag && props.ansMap[props.x][props.y]===1) ? mesh.current.rotation.y += 0.1 : mesh.current.rotation.y = 0 });\n\n    return (\n        <mesh\n            {...props}\n            ref={mesh} >\n                <boxBufferGeometry attach=\"geometry\" args={[boxSize, boxSize, boxSize]} />\n                <meshStandardMaterial attach=\"material\" color={props.color} />\n        </mesh>\n    );\n}\n\n\nfunction MatrixBox(props) {\n    const mesh = useRef();\n\n    const [state, setState] = useState(props);\n\n    const basezDistance = boxSize + boxSize / 2;\n\n    const preIdx = [...Array(N).keys()].map((_, i) => {\n        return (i - Math.floor(N / 2)) * basezDistance + (N&1 ? 0 : basezDistance/2);\n    });\n\n    const idxes = preIdx.map(i => {return preIdx.map(j => {return [i, j, 0] }) }).flat();\n\n    const lists = [];\n\n    for(let xyz in idxes) {\n        let y = parseInt(idxes[xyz][0] / basezDistance + Math.floor(N/2)),\n            x = (N-1)-parseInt(idxes[xyz][1] / basezDistance + Math.floor(N/2));\n\n        lists.push(\n            <Box\n                onClick={() => {\n                    clickBox([y,x]);\n                    setState({...state, active: statusLights, answer: ansMap});\n                } }\n                key={xyz}\n                y={y}\n                x={x}\n                showAnsFlag={props.showAnsFlag}\n                ansMap={state.answer}\n                position={idxes[xyz]}\n                color={colorDef(state.active[x][y])}\n            />\n        );\n    }\n\n    return (\n        <mesh>{lists}</mesh>\n    );\n}\n\nMatrixBox.defaultProps = {\n    active: statusLights,\n    answer: ansMap\n}\n\nconst CameraController = () => {\n    const { camera, gl } = useThree();\n    const cameraDistance = 700;;\n    useEffect(\n        () => {\n            const controls = new OrbitControls(camera, gl.domElement);\n\n            camera.position.set(0, 0, cameraDistance);\n            controls.minDistance = 0;\n            controls.maxDistance = 1000;\n            return () => {\n                controls.dispose();\n            };\n        },\n        [camera, gl]\n    );\n    return null;\n};\n\nfunction App(props) {\n    const [state, setState] = useState(props);\n\n    return (\n        <div className=\"app-container\">\n            <button\n                onClick={(e) => { setState({...state, showAnsFlag: !state.showAnsFlag }) } }\n                className=\"ans-show-button\">SHOW ANSWER</button>\n            <Canvas>\n                <CameraController />\n                <ambientLight />\n                <pointLight position={[0, 0, 1000]} />\n                <MatrixBox showAnsFlag={state.showAnsFlag} />\n            </Canvas>\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    showAnsFlag: false\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}